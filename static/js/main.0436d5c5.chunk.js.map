{"version":3,"sources":["Firebase.js","components/navigation/navViews/NavbarBrand.js","components/navigation/navViews/MenuBurger.js","components/navigation/navViews/Navigation.js","components/StartPage.js","components/calendar/calendarControllers/BuildCalendar.js","components/calendar/calendarControllers/DayStyles.js","components/calendar/calendarViews/CalendarHeader.js","components/tasks/AddTask.js","components/tasks/ReturnTask.js","components/tasks/SortTasks.js","components/calendar/calendarViews/CalendarBubble.js","components/calendar/calendarViews/Calendar.js","components/user/userControllers/FormError.js","components/user/userViews/LoginView.js","components/user/userControllers/Login.js","components/user/userViews/SignupView.js","components/user/userControllers/Signup.js","components/navigation/navControllers/ToggleDropDown.js","components/navigation/navViews/Sidenav.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","NavbarBrand","user","Navbar","Brand","className","to","MenuBurger","state","showState","onClick","Navigation","sidenav","showSidenav","logOutUser","howManyTasks","history","useHistory","useState","notification","setNotification","useEffect","bg","expand","Container","fluid","e","StartPage","push","Button","BuildCalendar","value","startDay","clone","startOf","endDay","endOf","day","subtract","calendar","isBefore","Array","fill","map","add","dayStyles","isSame","Date","isToday","beforeToday","CalendarHeader","setValue","format","AddTask","addTask","taskName","setTaskName","taskDate","setTaskDate","taskShortDate","setTaskShortDate","taskChecked","setTaskChecked","Form","isSelected","showInputTask","onSubmit","preventDefault","handleSubmit","Control","required","type","placeholder","id","name","onChange","target","handleChange","hidden","ReturnTask","taskID","userID","whichTask","ref","database","set","toggleCheck","remove","deleteTask","moment","locale","todaysDate","tasksBeforeToday","tasks","undefined","sort","a","b","task","i","tasksToday","tasksAfterToday","isAfter","tasksCompleted","thisDaysDate","tasksRemaining","CalendarBubble","calendarBubble","showCalendarBubble","Calendar","setCalendar","data","setData","setLoading","setError","setCalendarBubble","fetch","then","response","ok","json","dagar","catch","error","console","weekday","week","toString","thisDay","datum","helgdag","FormError","theMessage","this","props","Component","LoginView","errorMessage","email","setEmail","password","setPassword","FormGroup","FormControl","Login","setErrorMessage","registrationInfo","signInWithEmailAndPassword","message","SignupView","passOne","setPassOne","passTwo","setPassTwo","Signup","registerUser","length","createUserWithEmailAndPassword","log","toggleDropDown","setDropDown","dropDown","Sidenav","todaysDateDayAndMonth","App","setState","uid","onAuthStateChanged","FirebaseUser","signOut","loading","Promise","resolve","setTimeout","on","snapshot","val","tasksList","allTasksRemaining","item","Row","Col","xs","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0436d5c5.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA9-907emHXJmKhtrX-ccHSaFqQQ1pGmKI\",\n    authDomain: \"calender-todo-374ad.firebaseapp.com\",\n    databaseURL: \"https://calender-todo-374ad-default-rtdb.firebaseio.com/\",\n    projectId: \"calender-todo-374ad\",\n    storageBucket: \"calender-todo-374ad.appspot.com\",\n    messagingSenderId: \"369571814179\",\n    appId: \"1:369571814179:web:b68645c23680bb71faca96\",\n    measurementId: \"G-Q8CJ9ZF8WH\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\n\nexport default firebase;","// import libaries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineCalendar } from 'react-icons/ai'\n\n// import components\nimport Navbar from 'react-bootstrap/Navbar';\n\nfunction NavbarBrand({ user }){\n    return(\n        <Navbar.Brand>\n            <Link className={!user ? 'fw-bold text-dark brand' : 'fw-bold text-light navbar-brand-sidenav brand'} to='/'>\n                <AiOutlineCalendar className='text-color'/> \n                {' '}\n                Calendar-todo\n            </Link>\n        </Navbar.Brand>\n    )\n}\n\nexport default NavbarBrand;","// import libaries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction MenuBurger({state, showState, className}){\n\n    return(\n        <Link\n            to='#'\n            className={state ? `menu-btn is-active ${className}` : `menu-btn ${className}`}\n            onClick={showState}>\n            <div className={state ? `menu-burger is-active ${className}`: `menu-burger ${className}`} />\n        </Link>\n    )\n\n}\n\n\nexport default MenuBurger;","// import libaries \nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { IoIosNotificationsOutline } from 'react-icons/io'\nimport { VscSignOut } from 'react-icons/vsc';\n\n// import components\nimport { Navbar, Container } from 'react-bootstrap';\nimport NavbarBrand from './NavbarBrand';\nimport MenuBurger from './MenuBurger';\n\n\n// navigation\nfunction Navigation ({sidenav, showSidenav, user, logOutUser, howManyTasks}){\n\n    let history = useHistory();\n    const [notification, setNotification] = useState(null);\n\n    useEffect(() => {\n        if(howManyTasks === 0){\n            setNotification(false);\n        } else {\n            setNotification(true);\n        }\n\n    },[howManyTasks]);\n\n    return(\n        <Navbar bg={user ? 'transparent' : 'transparent'} expand='lg' className={user ? 'shadow-5-strong border-bottom-thin' : ''}>\n            <Container fluid className='nav'>\n            {!user &&\n                <NavbarBrand /> \n            }\n            {user && \n            <>\n                <MenuBurger \n                  state={sidenav}\n                  showState={showSidenav}/> \n            </>\n            }\n                <div className='nav-link'>\n                    {!user &&\n                    <>\n                        <Link\n                          className='link text-secondary no-user'  \n                          to='/react-calendar/users/login'>\n                              Logga in\n                        </Link>\n                        <Link \n                          className='link text-secondary no-user'\n                          to='/react-calendar/users/signup'>\n                              Skapa konto\n                        </Link>\n                    </>\n                    }\n                    {user &&\n                    <>\n                        <Link\n                          className='link text-secondary nav-icon user' \n                          onClick={e => logOutUser(e, history)}\n                          to='/react-calendar'>\n                              <VscSignOut className='icon-btn' /> \n                              <div className='info-bubble logout'>Logga ut</div>\n                        </Link>\n                        <Link \n                          className='link text-secondary nav-icon user'\n                          to='#'>\n                              <IoIosNotificationsOutline className='icon-btn'/> \n                              <div className='info-bubble notification'>Antal uppgifter kvar med deadline idag eller tidigare</div>\n                              <div className={notification ? 'notification-bubble text-white fw-bold is-active' : 'notification-bubble text-white fw-bold'}>{howManyTasks}</div>\n                        </Link>\n                    </>\n                    }\n                </div>\n            </Container>\n        </Navbar>\n    )\n}\n\n\nexport default Navigation;","// import libaries\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\n// import components\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\n\nfunction StartPage({ user }){\n\n    let history = useHistory();\n\n    // if user is already logged in, direct to users calendar\n    // else direct to startpage\n    if(user !== null){\n        history.push('/react-calendar/app/calendar');\n    } else {\n        history.push('/react-calendar/')\n    };\n\n    // handle click for button\n    const handleClick = () => history.push('/react-calendar/users/signup')\n\n    return(\n        <Container>\n            <div className='textbox startpage'>\n                <h1 className='fw-bold display-3'>\n                    Organisera livet med Calendar-todo\n                </h1>\n                <br /> \n                <Button \n                    className='fw-bold bg-color border-color'\n                    onClick={handleClick}>\n                    Kom igång\n                </Button>\n                <br />\n                <br />  \n                <p>Har du redan ett konto?<Link className='text-color' to='/react-calendar/users/login'> Logga in</Link></p>\n            </div>\n        </Container>\n    )\n\n}\n\n\nexport default StartPage;","function BuildCalendar(value){\n\n    const startDay = value.clone().startOf('month').startOf('week');\n    const endDay = value.clone().endOf('month').endOf('week');\n    const day = startDay.clone().subtract(1, 'day');\n    const calendar = [];\n\n    while(day.isBefore(endDay, 'day')) {\n        calendar.push(\n          Array(7)\n          .fill(0)\n          .map(() => day.add(1, 'day').clone())\n        );\n    }\n\n    return calendar;\n}\n\n\nexport default BuildCalendar;","function beforeToday(day) {\n    return day.isBefore(new Date(), 'day');\n}\n\nfunction isToday(day) {\n    return day.isSame(new Date(), 'day');\n}\n\nexport default function dayStyles(day, value) {\n    if(isToday(day)) return 'today'\n    if(beforeToday(day)) return 'before'\n    return ''\n}\n","// import libaries\nimport React from 'react';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\n\nfunction CalendarHeader({value, setValue}){\n\n    const currentMonth = () => {\n        return value.format('MMMM')\n    }\n\n    function currentYear() {\n        return value.format('YYYY')\n    }\n\n    function prevMonth() {\n        return value.clone().subtract(1, 'month')\n    }\n\n    function nextMonth() {\n        return value.clone().add(1, 'month')\n    }\n\n    return ( \n        <div className='calendar-header'>\n            <div className='calendar-header-content fw-bold'>\n                <div \n                    className='calendar-icon inline-block'\n                    onClick={() => setValue(prevMonth())}\n                    >\n                    <IoIosArrowBack />\n                </div>\n                <div \n                    className='calendar-month inline-block'\n                    >\n                    {currentMonth()} {currentYear()}\n                </div>\n                <div \n                    className='calendar-icon inline-block'\n                    onClick={() => setValue(nextMonth())}\n                    >\n                    <IoIosArrowForward />\n                </div>\n            </div>\n        </div>    \n    )\n}\n\nexport default CalendarHeader;","// import libaries\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap'\n\n\nfunction AddTask({day, value, addTask}){\n\n    // states\n    const [taskName, setTaskName] = useState('')\n    const [taskDate, setTaskDate] = useState('')\n    const [taskShortDate, setTaskShortDate] = useState('')\n    const [taskChecked, setTaskChecked] = useState('')\n\n    // check if day in calendar is selected\n    function isSelected(day, value) {\n        return value.isSame(day, 'day');\n    }\n\n    // add classname if selected\n    function showInputTask(day, value) {\n        if(isSelected(day, value)) return 'selected'\n        return ''\n    }\n\n    // handle change\n    const handleChange = (e) => {\n        e.preventDefault();\n\n        setTaskName(e.target.value);\n        setTaskDate(e.target.id);\n        setTaskShortDate(e.target.name);\n        setTaskChecked(false);\n    }\n\n    // handle submit\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        addTask(taskName, taskDate, taskShortDate, taskChecked);\n        setTaskName('');\n        setTaskDate('');\n        setTaskShortDate('');\n        setTaskChecked('');\n    }\n\n    return(\n        <>\n            <Form className={`${showInputTask(day, value)} input-task`} onSubmit={e => handleSubmit(e)}>\n                <Form.Control\n                    required\n                    className='calendar-input'\n                    type='text' \n                    placeholder='Lägg till uppgift..' \n                    id={`${day.format('YYYY/MM/DD')}`}\n                    name={`${day.format('DD MMM')}`}\n                    value={taskName}\n                    onChange={e => handleChange(e)} />\n                <Button \n                    type='submit'\n                    hidden>\n                    +\n                </Button>\n            </Form>\n        </>\n    )\n}\n\nexport default AddTask;","// import libaries\nimport React from 'react';\nimport firebase from '../../Firebase';\n\n//import components\nimport { IoTrashOutline, IoCheckmarkOutline } from 'react-icons/io5';\n\n\nfunction ReturnTask ({taskChecked, taskID, taskShortDate, taskName, userID}){\n\n    // toggle checked task  \n    const toggleCheck = (e, whichTask, taskChecked) => {\n        e.preventDefault();\n\n        const ref = firebase\n        .database()\n        .ref(`react-calendar/app/calendar/${userID}/${whichTask}/taskChecked`);\n        \n        if(taskChecked === false){\n            ref.set(!taskChecked);\n        } else if(taskChecked === true){\n            ref.set(!taskChecked);\n        }\n    }\n\n    // delete task \n    const deleteTask = (e, whichTask) => {\n        e.preventDefault();\n\n        const ref  = firebase.database().ref(`react-calendar/app/calendar/${userID}/${whichTask}`);\n        ref.remove();\n    }\n\n    return(\n        <div className={taskChecked ? 'sidenav-task checked' : 'sidenav-task'} key={taskID}>\n            <div className={taskChecked ? 'capitalize-first task-name inline-block checked' : 'capitalize-first task-name inline-block'}>{taskName}</div>\n            <IoCheckmarkOutline \n                onClick={e => toggleCheck(e, taskID, taskChecked)} \n                className={taskChecked ? 'task-icon checked check' : 'task-icon check'}\n                /> \n            <IoTrashOutline \n                onClick={e => deleteTask(e, taskID)} \n                className='task-icon trash'\n                />\n            <div className='task-date'>{taskShortDate}</div>\n        </div>\n    )\n}\n\n\nexport default ReturnTask;","// import libaries\nimport React from 'react';\nimport moment from 'moment';\nimport 'moment/locale/sv'\n\n// import components\nimport ReturnTask from './ReturnTask';\n\n// dates \nmoment.locale('sv');\nlet todaysDate = moment().format('YYYYMMDD');\n\n\n\n// TASKS BEFORE TODAYS DATE \nexport const tasksBeforeToday = (tasks, userID) => {\n    if(tasks !== undefined) {\n        let sortedTasks = tasks.sort((a,b) => new moment(a.taskDate).format('YYYYMMDD') - new moment(b.taskDate).format('YYYYMMDD'));\n        let tasksBeforeToday = sortedTasks.map((task, i) => {\n            if(moment(task.taskDate).isBefore(todaysDate)){\n                return (\n                    <ReturnTask\n                        key={i} \n                        userID={userID}\n                        taskChecked={task.taskChecked}\n                        taskName={task.taskName}\n                        taskID={task.taskID}\n                        taskShortDate={task.taskShortDate}/>\n                )\n            } else return null;\n        }); \n    return (<>{tasksBeforeToday}</>)\n  }\n}\n\n\n// TASKS WITH SAME DATE AS TODAY \nexport const tasksToday = (tasks, userID) => {\n    if(tasks !== undefined) {\n        let sortedTasks = tasks.sort((a,b) => new moment(a.taskDate).format('YYYYMMDD') - new moment(b.taskDate).format('YYYYMMDD'));\n        let tasksToday = sortedTasks.map((task, i) => {\n            if(moment(task.taskDate).isSame(todaysDate)){\n                return (\n                    <ReturnTask\n                        key={i} \n                        userID={userID}\n                        taskChecked={task.taskChecked}\n                        taskName={task.taskName}\n                        taskID={task.taskID}\n                        taskShortDate={task.taskShortDate}/>\n                )\n            } else return null;\n        }); \n    return (<>{tasksToday}</>)\n  }\n}\n\n\n// TASKS AFTER TODAYS DATE \nexport const tasksAfterToday = (tasks, userID) => {\n    if(tasks !== undefined) {\n        let sortedTasks = tasks.sort((a,b) => new moment(a.taskDate).format('YYYYMMDD') - new moment(b.taskDate).format('YYYYMMDD'));\n        let tasksAfterToday = sortedTasks.map((task, i) => {\n            if(moment(task.taskDate).isAfter(todaysDate)){\n                return (\n                    <ReturnTask\n                        key={i} \n                        userID={userID}\n                        taskChecked={task.taskChecked}\n                        taskName={task.taskName}\n                        taskID={task.taskID}\n                        taskShortDate={task.taskShortDate}/>\n                )\n            } else return null;\n        }); \n    return (<>{tasksAfterToday}</>)\n   }\n}\n\n\n// TASKS THAT'S COMPLETED ON CHOSEN DAY \nexport const tasksCompleted = (tasks, userID, thisDaysDate) => {\n    if(tasks !== undefined) {\n        let sortedTasks = tasks.sort((a,b) => new moment(a.taskDate).format('YYYYMMDD') - new moment(b.taskDate).format('YYYYMMDD'));\n        let tasksCompleted = sortedTasks.map((task, i) => {\n            if(moment(task.taskDate).isSame(thisDaysDate)){\n                if(task.taskChecked === true){\n                    return (\n                       <div className='calender-bubble-task'>\n                           <ReturnTask\n                               key={i} \n                               userID={userID}\n                               taskChecked={task.taskChecked}\n                               taskName={task.taskName}\n                               taskID={task.taskID}\n                               taskShortDate={task.taskShortDate}/>\n                        </div>\n                    )\n                }\n            } else return null;\n        }); \n    return (<>{tasksCompleted}</>)\n   }\n}\n\n\n// TASKS THAT'S REMAINING ON CHOSEN DAY \nexport const tasksRemaining = (tasks, userID, thisDaysDate) => {\n    if(tasks !== undefined) {\n        let sortedTasks = tasks.sort((a,b) => new moment(a.taskDate).format('YYYYMMDD') - new moment(b.taskDate).format('YYYYMMDD'));\n        let tasksRemaining = sortedTasks.map((task, i) => {\n            if(moment(task.taskDate).isSame(thisDaysDate)){\n                if(task.taskChecked === false){\n                    return (\n                       <div className='calender-bubble-task'>\n                           <ReturnTask\n                               key={i} \n                               userID={userID}\n                               taskChecked={task.taskChecked}\n                               taskName={task.taskName}\n                               taskID={task.taskID}\n                               taskShortDate={task.taskShortDate}/>\n                        </div>\n                    )\n                }\n            } else return null;\n        }); \n    return (<>{tasksRemaining}</>)\n   }\n}","// import libaries\nimport React from 'react';\nimport moment from 'moment';\n\n// import components\nimport MenuBurger from '../../navigation/navViews/MenuBurger';\nimport { tasksCompleted, tasksRemaining } from '../../tasks/SortTasks';\n\n\nfunction CalendarBubble({ calendarBubble, showCalendarBubble, value, tasks, userID }){\n\n    // get chosen days date\n    let thisDaysDate = value.format('YYYYMMDD');\n\n    return ( \n        <div className={calendarBubble ? 'calendar-bubble is-active' : 'calendar-bubble' } >\n             <MenuBurger\n               className=\"calendar\"\n               state={calendarBubble}\n               showState={showCalendarBubble}\n               /> \n            <div className='calendar-bubble-content'>\n                <h4 className='calendar-bubble-date border-bottom-thin'>{new moment(thisDaysDate).format('DD MMM YYYY')}</h4>\n                <p className='fw-bold calendar-bubble-title'>Färdiga uppgifter för dagen:</p>\n                <ul className='calendar-bubble-tasks'>{tasksCompleted(tasks, userID, thisDaysDate)}</ul>\n                <br /> \n                <p className='fw-bold calendar-bubble-title'>Kvarstående uppgifter för dagen:</p>\n                <ul className='calendar-bubble-tasks'>{tasksRemaining(tasks, userID, thisDaysDate)}</ul>\n            </div>\n            <div className='calender-bubble-footer'>\n            </div>\n        </div>    \n    )\n}\n\nexport default CalendarBubble;","// import libaries\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport 'moment/locale/sv'\n\n// import components\nimport Container from 'react-bootstrap/Container';\nimport BuildCalendar from '../calendarControllers/BuildCalendar';\nimport dayStyles from '../calendarControllers/DayStyles';\nimport CalendarHeader from './CalendarHeader';\nimport AddTask from '../../tasks/AddTask';\nimport ReturnTask from '../../tasks/ReturnTask';\nimport { IoIosMore } from 'react-icons/io';\nimport CalendarBubble from './CalendarBubble';\n\nfunction Calendar({ addTask, tasks, userID }){\n\n    moment.locale('sv');\n    const weekdays = ['Mån', 'Tis', 'Ons', 'Tors', 'Fre', 'Lör', 'Sön'];\n\n    // states\n    const [calendar, setCalendar] = useState([]);\n    const [value, setValue] = useState(moment());\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true)\n    const [error, setError] = useState(null)\n    const [calendarBubble, setCalendarBubble] = useState(false);\n\n    // show calendar bubble for specifik day \n    const showCalendarBubble = (e) => {\n        setCalendarBubble(!calendarBubble);\n    }\n\n   useEffect(() => {\n    setCalendar(BuildCalendar(value));\n\n        return (\n           fetch(`https://sholiday.faboul.se/dagar/v2.1/${value.format('YYYY')}`)\n           .then(response => {\n               if(response.ok) {\n                   return response.json()\n               } throw response;\n            })\n            .then(data => {\n                setLoading(false);\n                setData(data.dagar);\n            })\n            .catch(error => {\n                console.error('error', error);\n                setError(error)\n            })\n        )\n   }, [value])\n\n    return(\n            <Container fluid className='calendar-container'>\n                <CalendarHeader\n                  value={value}\n                  setValue={setValue}\n                  /> \n                <div className='specifik-day'>\n                    <CalendarBubble \n                      userID={userID}\n                      tasks={tasks}\n                      value={value}\n                      calendarBubble={calendarBubble}\n                      showCalendarBubble={showCalendarBubble}\n                    /> \n                </div>\n                <Container fluid>\n                <div className='row calendar-weekday border-right-thin border-left-thin border-bottom-thin border-top-thin'>\n                    {weekdays.map((weekday, i) => (\n                        <div key={i} className='col-sm weekday-day fw-bold'>{weekday}</div>\n                    ))}\n                </div>\n                    {calendar.map((week, i) => (\n                        <div key={i} className='row calendar-week border-left-bold border-bottom-bold'>\n                            {week.map((day) => {\n                                return ( \n                                <div\n                                  key={`${day.format('YYYY/MM/DD')}`} \n                                  id={`${day.format('YYYY/MM/DD')}`} \n                                  className={`${dayStyles(day, value)} day col-sm calendar-day border-right-bold`}\n                                  onClick={(e) => setValue(day)}> \n                                    <div className='calendar-menu '>\n                                        <IoIosMore onClick={(e) => showCalendarBubble(e)}/>\n                                    </div>\n                                    <div className='date inline-block fw-bold'>\n                                        {day.format('D').toString()}\n                                    </div>\n                                    {data.map((thisDay) => {\n                                        if(moment(thisDay.datum).isSame(day)){\n                                            return(<div key={day} className={`date holiday ${thisDay['röd dag']}`}>{thisDay.helgdag}</div>)\n                                        } else return null;\n                                    })}\n                                    <div className='calendar-tasks'>\n                                    {tasks && (\n                                     tasks.map((task) => {\n                                         if(moment(task.taskDate).isSame(day)){\n                                             return (\n                                             <ReturnTask \n                                                key={task.taskID}\n                                                userID={userID}\n                                                taskChecked={task.taskChecked}\n                                                taskName={task.taskName}\n                                                taskID={task.taskID}\n                                                taskShortDate={task.taskShortDate}/>\n                                            )} else return null;\n                                        }) \n                                    )}\n                                    </div>\n                                    <AddTask\n                                      day={day}\n                                      value={value}\n                                      addTask={addTask}/>\n                                </div>\n                              )}\n                            )}\n                        </div>\n                    ))} \n                </Container>\n            </Container>\n       )\n    }\n\n\nexport default Calendar;","import React, { Component } from 'react';\n\nclass FormError extends Component {\n    render(){\n\n        const {theMessage} = this.props;\n\n        return(\n            <div className=\"col-12 alert alert-warning error-message\">\n                {theMessage}\n            </div> \n        );\n    }\n}\n\nexport default FormError;","// import libaries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaFacebookF } from 'react-icons/fa';\nimport { VscSignIn } from 'react-icons/vsc';\n\n// import components\nimport Container from 'react-bootstrap/Container';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport FormError from '../userControllers/FormError';\n\nfunction LoginView({handleSubmit, errorMessage, email, setEmail, password, setPassword}){\n\n    return(\n        <Container>\n            <form onSubmit={e => handleSubmit(e)}>\n                <FormGroup>\n                <div className='form-box'>\n                        <Link \n                          className='form-box-content is-active'\n                          to='/react-calendar/users/login'>\n                            <div className='fw-bold'>\n                               <AiOutlineUser className='form-icon' />\n                               <br /> \n                               Logga in\n                             </div>\n                        </Link>\n                        <div className='form-box-content transparent'></div>\n                        <Link \n                          className='form-box-content'\n                          to='/react-calendar/users/signup'>\n                            <div className='fw-bold'>\n                               <VscSignIn className='form-icon' />\n                               <br /> \n                               Skapa konto\n                             </div>\n                        </Link>\n                    </div>\n                    <FormControl\n                        required\n                        type='text'\n                        id='email'\n                        placeholder='E-post'\n                        name='email'\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        />\n                    <FormControl\n                        required\n                        type='text'\n                        id='password'\n                        placeholder='Lösenord'\n                        name='password'\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        />\n                        {errorMessage !== null ? (\n                                <FormError theMessage={errorMessage}/> \n                            ) : null}\n                    <Button type='submit' className='fw-bold'>Logga in</Button>\n                    <p className='form-or'> \n                        <span>eller</span>\n                    </p>\n                    <Button className='fw-bold facebook'>\n                        <FaFacebookF className='btn-icon' /> \n                        {' '}\n                        Logga in med Facebook\n                    </Button>\n                    <Button className='fw-bold google'>\n                        <FcGoogle className='btn-cion' /> \n                        {' '}\n                        Logga in med Google\n                    </Button>\n                </FormGroup>\n                <p>Har du inget konto än?<Link to='/react-calendar/users/signup' className='text-color'> Skapa konto</Link></p>\n            </form>\n        </Container>\n    )\n}\n\nexport default LoginView;","//import libaries\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'; \n\n//import components\nimport LoginView from '../userViews/LoginView';\nimport firebase from '../../../Firebase';\n\n\nfunction Login(){\n\n    const history = useHistory();\n\n    // states\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let registrationInfo = {\n            email: email,\n            password: password\n        };\n\n        firebase\n        .auth()\n        .signInWithEmailAndPassword(\n            registrationInfo.email,\n            registrationInfo.password\n        ).then(() => {\n            history.push('/react-calendar/app/calendar');\n        })\n        .catch(error => {\n            if(error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\n                setErrorMessage(\"Det finns ingen användare med den angivna e-postadressen.\");\n            } else if(error.message === \"The password is invalid or the user does not have a password.\") {\n                setErrorMessage(\"Lösenordet är ogiligt.\")\n            } else {\n                setErrorMessage(null);\n            }\n        })\n    }\n\n    return(\n        <LoginView\n          email={email}\n          setEmail={setEmail}\n          errorMessage={errorMessage}\n          password={password}\n          setPassword={setPassword}\n          handleSubmit={handleSubmit}\n        /> \n    )\n}\n\nexport default Login;","// import libaries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaFacebookF } from 'react-icons/fa';\nimport { VscSignIn } from 'react-icons/vsc';\n\n// import components\nimport Container from 'react-bootstrap/Container';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport FormError from '../userControllers/FormError';\n\n\nfunction SignupView({handleSubmit, email, errorMessage, setEmail, passOne, setPassOne, passTwo, setPassTwo}){\n\n    return(\n        <Container>\n            <form onSubmit={e => handleSubmit(e)}>\n                <FormGroup>\n                <div className='form-box'>\n                        <Link \n                          className='form-box-content'\n                          to='/react-calendar/users/login'>\n                            <div className='fw-bold'>\n                               <AiOutlineUser className='form-icon' />\n                               <br /> \n                               Logga in\n                             </div>\n                        </Link>\n                        <div className='form-box-content transparent'></div>\n                        <Link \n                          className='form-box-content is-active'\n                          to='/react-calendar/users/signup'>\n                            <div className='fw-bold'>\n                               <VscSignIn className='form-icon' />\n                               <br /> \n                               Skapa konto\n                             </div>\n                        </Link>\n                    </div>\n                    <Button className='fw-bold facebook'>\n                        <FaFacebookF className='btn-icon' /> \n                        {' '}\n                        Fortsätt med Facebook\n                    </Button>\n                    <Button className='fw-bold google'>\n                        <FcGoogle className='btn-cion' /> \n                        {' '}\n                        Fortsätt med Google\n                    </Button>\n                    <p className='form-or'> \n                        <span>eller</span>\n                    </p>\n                    <FormControl\n                        required\n                        type='text'\n                        id='email'\n                        placeholder='E-post'\n                        name='email'\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        />\n                    <FormControl\n                        required\n                        type='text'\n                        id='passOne'\n                        placeholder='Lösenord'\n                        name='passOne'\n                        value={passOne}\n                        onChange={e => setPassOne(e.target.value)}\n                        />\n                    <FormControl\n                        required\n                        type='text'\n                        id='passTwo'\n                        placeholder='Upprepa lösenord'\n                        name='passTwo'\n                        value={passTwo}\n                        onChange={e => setPassTwo(e.target.value)}\n                        />\n                        {errorMessage !== null ? (\n                                <FormError theMessage={errorMessage}/> \n                            ) : null}\n                    <Button type='submit' className='fw-bold'>Registrera</Button>\n                </FormGroup>\n                <p>Har du redan ett konto?<Link to='/react-calendar/users/login' className='text-color'> Logga in</Link></p>\n            </form>\n        </Container>\n    )\n}\n\nexport default SignupView;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'; \n\n//import components\nimport SignupView from '../userViews/SignupView'\nimport firebase from '../../../Firebase';\n\nfunction Signup({registerUser}){\n\n    let history = useHistory();\n\n    // states\n    const [email, setEmail] = useState('');\n    const [passOne, setPassOne] = useState('');\n    const [passTwo, setPassTwo] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n\n        // check password requirements\n        if(!passOne){\n            setErrorMessage(null);\n        } else if (passOne.length < 6){\n            setErrorMessage('Lösenordet bör innehålla minst 6 tecken.');\n        } else if(!passTwo) {\n            setErrorMessage(null);\n        } else if(passOne !== passTwo) {\n            setErrorMessage('Lösenorden matchar inte.');\n        } else {\n            setErrorMessage(null);\n        }\n\n    },[passOne, passTwo])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let registrationInfo = {\n            email: email,\n            password: passOne\n        }\n\n        firebase\n        .auth()\n        .createUserWithEmailAndPassword(\n            registrationInfo.email,\n            registrationInfo.password\n        ).then(() => {\n            console.log('användare registrerad')\n            registerUser(history);\n        })\n        .catch(error => {\n            if(error.message === 'The email address is already in use by another account.'){\n                console.log(error.message)\n                setErrorMessage('E-postadressen används redan av en annan användare.');\n            } else {\n                setErrorMessage(null);\n            }\n        })\n    }\n\n\n    return(\n        <SignupView\n        email={email}\n        errorMessage={errorMessage}\n        setEmail={setEmail}\n        passOne={passOne}\n        setPassOne={setPassOne}\n        passTwo={passTwo}\n        setPassTwo={setPassTwo}\n        handleSubmit={handleSubmit} /> \n    )\n}\n\nexport default Signup;","function toggleDropDown (e, tasks, setDropDown, dropDown){\n\n        if(tasks !== undefined){\n            e.preventDefault();\n            setDropDown(!dropDown);\n\n       return; \n    };\n};\n\nexport default toggleDropDown; ","// import libaries\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport 'moment/locale/sv'\n\n// import components\nimport { IoHomeOutline, IoMailOpenOutline } from 'react-icons/io5';\nimport { IoIosArrowForward, IoIosNotificationsOutline } from 'react-icons/io';\nimport { Navbar, Container } from 'react-bootstrap';\nimport toggleDropDown from '../navControllers/ToggleDropDown';\nimport NavbarBrand from './NavbarBrand';\nimport { tasksBeforeToday, tasksToday, tasksAfterToday } from '../../tasks/SortTasks';\n\n\nfunction Sidenav({ sidenav, tasks, userID, user }){\n\n    // states \n    const [dropDown, setDropDown] = useState(true);\n\n    // dates \n    moment.locale('sv');\n    let todaysDateDayAndMonth = moment().format('DD MMM');\n\n\n    return (\n            <div className={sidenav ? 'sidenav' : 'sidenav is-active'}>\n                <Navbar>\n                    <Container fluid>\n                        <NavbarBrand \n                            user={user}/> \n                    </Container>\n                </Navbar>\n                <ul className='sidenav-alternatives'>\n                    <p className='fw-bold'><IoHomeOutline className='sidenav-icon' /> Hem</p>\n                    <p className='fw-bold'><IoMailOpenOutline className='sidenav-icon' /> Inkorg</p>\n                </ul>\n                <div className='dropdown'>\n                    <div className='fw-bold dropdown-category'>\n                        <div className='nav-link-dropdown' onClick={e => toggleDropDown(e, tasks, setDropDown, dropDown)}>\n                            <IoIosNotificationsOutline className='sidenav-icon' />\n                            <p className='inline-block'>Mina uppgifter</p>\n                            <IoIosArrowForward className={dropDown ? 'sidenav-icon arrow inline-block rotate' : 'arrow inline-block' }/></div>\n                    </div>\n                    <ul className={dropDown ? 'dropdown-content hide' : 'dropdown-content'}>\n                        <div className=\"list-group list-group-flush\">\n                            <div className='sidenav-category previous'>\n                                <div className='sidenav-title border-bottom-thin fw-bold'>\n                                Förfallna\n                                </div>\n                                <div className='sidenav-tasks'>{tasksBeforeToday(tasks, userID)}</div>\n                            </div>\n                            <div className='sidenav-category'>\n                                <div className='sidenav-title border-bottom-thin border-color fw-bold today'>\n                                {todaysDateDayAndMonth}{' '}•{' '}Idag\n                                </div>\n                                <div className='sidenav-tasks'>{tasksToday(tasks, userID)}</div>\n                            </div>\n                            <div className='sidenav-category'>\n                                <div className='sidenav-title border-bottom-thin fw-bold'>\n                                Kommande\n                                </div>\n                                <div className='sidenav-tasks'>{tasksAfterToday(tasks, userID)}</div>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    )\n}\n\nexport default Sidenav;","// import libaries \nimport React, { Component } from 'react';\nimport { \n  BrowserRouter as Router, \n  Switch,\n  Route\n } from 'react-router-dom';\nimport firebase from './Firebase';\nimport moment from 'moment';\nimport 'moment/locale/sv'\n\n// import components\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Navigation from './components/navigation/navViews/Navigation';\nimport StartPage from './components/StartPage';\nimport Calendar from './components/calendar/calendarViews/Calendar';\nimport Login from './components/user/userControllers/Login';\nimport Signup from './components/user/userControllers/Signup';\nimport Sidenav from './components/navigation/navViews/Sidenav';\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      userID: null, \n      sidenav: true, \n      loading: true\n    };\n  };\n\n  componentDidMount() {\n\n    demoAsyncCall().then(() => this.setState({ loading: false }));\n    firebase\n    .auth()\n    .onAuthStateChanged(FirebaseUser => {\n      if(FirebaseUser){\n        this.setState({\n          user: FirebaseUser,\n          userID: FirebaseUser.uid\n        });\n        const tasksRef = firebase\n          .database()\n          .ref('react-calendar/app/calendar/' + FirebaseUser.uid);\n        tasksRef.on('value', snapshot => {\n          let tasks = snapshot.val();\n          let tasksList = [];\n          let allTasksRemaining = [];\n\n          for (let item in tasks) {\n            tasksList.push({\n              taskID: item,\n              taskName: tasks[item].taskName,\n              taskDate: tasks[item].taskDate,\n              taskShortDate: tasks[item].taskShortDate,\n              taskChecked: tasks[item].taskChecked\n            });\n\n            // push to array if task is before or today and not checked\n            let todaysDate = moment().format('YYYYMMDD');\n            if(moment(tasks[item].taskDate).isBefore(todaysDate) || moment(tasks[item].taskDate).isSame(todaysDate)){\n              if(tasks[item].taskChecked === false){\n                  allTasksRemaining.push({\n                  taskChecked: tasks[item].taskChecked\n                })\n              }\n            }\n          }\n\n          this.setState({\n            tasks: tasksList,\n            howManyTasks: allTasksRemaining.length\n          });\n        })  \n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n\n  // show or hide sidenav \n  showSidenav = () => {\n    this.setState({\n      sidenav : !this.state.sidenav\n    })\n  };\n\n\n  // add task \n  addTask = (taskName, taskDate, taskShortDate, taskChecked) => {\n    const ref = firebase\n        .database()\n        .ref(`react-calendar/app/calendar/${this.state.user.uid}`);\n    ref.push({\n      taskName:taskName, \n      taskDate:taskDate, \n      taskShortDate:taskShortDate,\n      taskChecked:taskChecked\n    })\n  };\n\n\n  // register user\n  registerUser = (history) => {\n      firebase\n      .auth()\n      .onAuthStateChanged(FirebaseUser => {\n        this.setState({\n          user: FirebaseUser,\n          userID: FirebaseUser.uid\n        });\n      history.push('/react-calendar/app/calendar');\n    })\n  };\n\n\n  // log out \n  logOutUser = (e, history) => {\n      e.preventDefault();\n      this.setState({\n        user: null,\n        userID: null\n      });\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          console.log('utloggad');\n          console.log(this.state.user);\n          history.push('/react-calendar');\n      })\n  };\n\n\n  render() {\n\n    const { loading } = this.state;\n    if(loading) {\n      return null;\n    }\n\n  return (\n    <div className='App'>\n        <Router>\n            <Container fluid className='body-container'>\n                <Row>\n                    {this.state.user && (<Col xs={this.state.sidenav? '3' : '0'} className={this.state.sidenav ? 'sidenav-wrap is-active border-right' : 'sidenav-wrap not-active'}>\n                        <Sidenav \n                          user={this.state.user}\n                          tasks={this.state.tasks}\n                          userID={this.state.userID}\n                          todaysDate={this.state.todaysDate}\n                          todaysDateDayAndMonth={this.state.todaysDateDayAndMonth}\n                          toggleDropDown={this.toggleDropDown}\n                          /> \n                    </Col>\n                    )}\n                    <Col>\n                    <Navigation\n                        path='/react-calendar/:app?/:app2?'\n                        user={this.state.user}\n                        logOutUser={this.logOutUser}\n                        sidenav={this.state.sidenav}\n                        showSidenav={this.showSidenav}\n                        howManyTasks={this.state.howManyTasks}/> \n                    <Switch>\n                      <Route \n                          exact path='/react-calendar'>\n                          <StartPage\n                              user={this.state.user}/> \n                      </Route>\n                      <Route\n                          path='/react-calendar/app/calendar'>\n                          <Calendar \n                              addTask={this.addTask}\n                              tasks={this.state.tasks}\n                              userID={this.state.userID}/> \n                      </Route>\n                      <Route \n                          path='/react-calendar/users/login'>\n                          <Login /> \n                      </Route> \n                      <Route \n                          path='/react-calendar/users/signup'>\n                          <Signup \n                              registerUser={this.registerUser}/> \n                      </Route> \n                    </Switch>\n                    </Col>\n                </Row>\n            </Container>\n         </Router>\n    </div>\n  );\n}\n}\n\n\nfunction demoAsyncCall() {\n  return new Promise((resolve) => setTimeout(() => resolve(), 2500));\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import stylesheets\nimport './stylesheets/index.css';\nimport './stylesheets/navigation.css';\nimport './stylesheets/calendar.css';\nimport './stylesheets/form.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}