{"version":3,"sources":["Firebase.js","components/navigation/navViews/NavbarBrand.js","components/navigation/navViews/MenuBurger.js","components/navigation/Navigation.js","components/StartPage.js","components/calendar/calendarControllers/BuildCalendar.js","components/calendar/calendarControllers/DayStyles.js","components/calendar/calendarViews/CalendarHeader.js","components/calendar/calendarControllers/AddTask.js","components/calendar/calendarControllers/ReturnTask.js","components/calendar/calendarViews/Calendar.js","components/user/userControllers/FormError.js","components/user/userViews/LoginView.js","components/user/userControllers/Login.js","components/user/userViews/SignupView.js","components/user/userControllers/Signup.js","components/navigation/navControllers/ToggleDropDown.js","components/navigation/navViews/Sidenav.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","NavbarBrand","user","Navbar","Brand","className","to","MenuBurger","sidenav","showSidenav","onClick","Navigation","logOutUser","howManyTasks","history","useHistory","useState","notification","setNotification","useEffect","bg","expand","Container","fluid","e","StartPage","push","Button","BuildCalendar","value","startDay","clone","startOf","endDay","endOf","day","subtract","calendar","isBefore","Array","fill","map","add","dayStyles","isSame","Date","isToday","beforeToday","CalendarHeader","setValue","format","AddTask","addTask","taskName","setTaskName","taskDate","setTaskDate","taskShortDate","setTaskShortDate","taskChecked","setTaskChecked","Form","isSelected","showInputTask","onSubmit","preventDefault","handleSubmit","Control","required","type","placeholder","id","name","onChange","target","handleChange","hidden","ReturnTask","taskID","userID","whichTask","ref","database","set","toggleCheck","remove","deleteTask","Calendar","tasks","moment","locale","setCalendar","data","setData","setLoading","query","setError","fetch","then","response","ok","json","dagar","catch","error","console","log","weekday","i","week","handleClick","toString","thisDay","datum","helgdag","task","FormError","theMessage","this","props","Component","LoginView","errorMessage","email","setEmail","password","setPassword","FormGroup","FormControl","Login","setErrorMessage","registrationInfo","signInWithEmailAndPassword","message","SignupView","passOne","setPassOne","passTwo","setPassTwo","Signup","registerUser","length","createUserWithEmailAndPassword","toggleDropDown","setDropDown","dropDown","undefined","Sidenav","today","afterToday","todaysDate","todaysDateDayAndMonth","sortedTasks","sort","a","b","isAfter","App","setState","state","uid","onAuthStateChanged","FirebaseUser","signOut","loading","Promise","resolve","setTimeout","on","snapshot","val","tasksList","noneCheckedTasks","item","Row","Col","xs","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.599a492b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA9-907emHXJmKhtrX-ccHSaFqQQ1pGmKI\",\n    authDomain: \"calender-todo-374ad.firebaseapp.com\",\n    databaseURL: \"https://calender-todo-374ad-default-rtdb.firebaseio.com/\",\n    projectId: \"calender-todo-374ad\",\n    storageBucket: \"calender-todo-374ad.appspot.com\",\n    messagingSenderId: \"369571814179\",\n    appId: \"1:369571814179:web:b68645c23680bb71faca96\",\n    measurementId: \"G-Q8CJ9ZF8WH\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const provider = new firebase.auth.GoogleAuthProvider();\nexport const auth = firebase.auth();\n\nexport default firebase;","// import libaries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineCalendar } from 'react-icons/ai'\n\n// import components\nimport Navbar from 'react-bootstrap/Navbar';\n\nfunction NavbarBrand({ user }){\n    return(\n        <Navbar.Brand>\n            <Link className={!user ? 'fw-bold text-dark brand' : 'fw-bold text-light navbar-brand-sidenav brand'} to='/'>\n                <AiOutlineCalendar className='text-color'/> \n                {' '}\n                Calendar-todo\n            </Link>\n        </Navbar.Brand>\n    )\n}\n\nexport default NavbarBrand;","// import libaries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nfunction MenuBurger({sidenav, showSidenav}){\n\n    return(\n        <Link\n            to='#'\n            className={sidenav ? 'menu-btn is-active' : 'menu-btn'}\n            onClick={showSidenav}>\n            <div className={sidenav ? 'menu-burger is-active' : 'menu-burger'} />\n        </Link>\n    )\n\n}\n\n\nexport default MenuBurger;","// import libaries \nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { IoIosNotificationsOutline } from 'react-icons/io'\n\n// import components\nimport { Navbar, Container } from 'react-bootstrap';\nimport NavbarBrand from './navViews/NavbarBrand';\nimport MenuBurger from './navViews/MenuBurger';\n\n\n// navigation\nfunction Navigation ({sidenav, showSidenav, user, logOutUser, howManyTasks}){\n\n    let history = useHistory();\n\n    const [notification, setNotification] = useState(null);\n\n    useEffect(() => {\n\n        if(howManyTasks === 0){\n            setNotification(false);\n        } else {\n            setNotification(true);\n        }\n\n    },[howManyTasks]);\n\n    return(\n        <Navbar bg={user ? 'transparent' : 'transparent'} expand='lg' className={user ? 'shadow-5-strong border-bottom-thin' : ''}>\n            <Container fluid className='nav'>\n            {!user &&\n                <NavbarBrand /> \n            }\n            {user && \n            <>\n                <MenuBurger \n                  sidenav={sidenav}\n                  showSidenav={showSidenav}/> \n            </>\n            }\n                <div className='nav-link'>\n                    {!user &&\n                    <>\n                        <Link\n                          className='link text-secondary no-user'  \n                          to='/react-calendar/users/login'>\n                              Logga in\n                        </Link>\n                        <Link \n                          className='link text-secondary no-user'\n                          to='/react-calendar/users/signup'>\n                              Skapa konto\n                        </Link>\n                    </>\n                    }\n                    {user &&\n                    <>\n                        <Link\n                          className='link text-secondary user' \n                          onClick={e => logOutUser(e, history)}\n                          to='/react-calendar'>\n                              Logga ut\n                        </Link>\n                        <Link \n                          className='link text-secondary nav-icon user'\n                          to='#'>\n                              <IoIosNotificationsOutline /> \n                              <div className={notification ? 'notification-bubble text-white fw-bold is-active' : 'notification-bubble text-white fw-bold'}>{howManyTasks}</div>\n                        </Link>\n                    </>\n                    }\n                </div>\n            </Container>\n        </Navbar>\n    )\n}\n\n\nexport default Navigation;","// import libaries\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\n// import components\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\n\nfunction StartPage({ user }){\n\n    let history = useHistory();\n\n    // if user is already logged in, direct to users calendar\n    // else direct to startpage\n    if(user !== null){\n        history.push('/react-calendar/app/calendar');\n    } else {\n        history.push('/react-calendar/')\n    };\n\n    // handle click for button\n    const handleClick = () => history.push('/react-calendar/users/signup')\n\n    return(\n        <Container>\n            <div className='textbox startpage'>\n                <h1 className='fw-bold display-3'>\n                    Organisera livet med Calendar-todo\n                </h1>\n                <br /> \n                <Button \n                    className='fw-bold bg-color border-color'\n                    onClick={handleClick}>\n                    Kom igång\n                </Button>\n                <br />\n                <br />  \n                <p>Har du redan ett konto?<Link className='text-color' to='/react-calendar/users/login'> Logga in</Link></p>\n            </div>\n        </Container>\n    )\n\n}\n\n\nexport default StartPage;","function BuildCalendar(value){\n\n    const startDay = value.clone().startOf('month').startOf('week');\n    const endDay = value.clone().endOf('month').endOf('week');\n    const day = startDay.clone().subtract(1, 'day');\n    const calendar = [];\n\n    while(day.isBefore(endDay, 'day')) {\n        calendar.push(\n          Array(7)\n          .fill(0)\n          .map(() => day.add(1, 'day').clone())\n        );\n    }\n\n    return calendar;\n}\n\n\nexport default BuildCalendar;","function beforeToday(day) {\n    return day.isBefore(new Date(), 'day');\n}\n\nfunction isToday(day) {\n    return day.isSame(new Date(), 'day');\n}\n\nexport default function dayStyles(day, value) {\n    // if(isSelected(day, value)) return 'selected'\n    if(isToday(day)) return 'today'\n    if(beforeToday(day)) return 'before'\n    return ''\n}\n","// import libaries\nimport React from 'react';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\n\nfunction CalendarHeader({value, setValue}){\n\n    const currentMonth = () => {\n        return value.format('MMMM')\n    }\n\n    function currentYear() {\n        return value.format('YYYY')\n    }\n\n    function prevMonth() {\n        return value.clone().subtract(1, 'month')\n    }\n\n    function nextMonth() {\n        return value.clone().add(1, 'month')\n    }\n\n    return ( \n        <div className='calendar-header'>\n            <div className='calendar-header-content fw-bold'>\n                <div \n                    className='calendar-icon inline-block'\n                    onClick={() => setValue(prevMonth())}\n                    >\n                    <IoIosArrowBack />\n                </div>\n                <div \n                    className='calendar-month inline-block'\n                    >\n                    {currentMonth()} {currentYear()}\n                </div>\n                <div \n                    className='calendar-icon inline-block'\n                    onClick={() => setValue(nextMonth())}\n                    >\n                    <IoIosArrowForward />\n                </div>\n            </div>\n        </div>    \n    )\n}\n\nexport default CalendarHeader;","// import libaries\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap'\n\n\nfunction AddTask({day, value, addTask}){\n\n    // states\n    const [taskName, setTaskName] = useState('')\n    const [taskDate, setTaskDate] = useState('')\n    const [taskShortDate, setTaskShortDate] = useState('')\n    const [taskChecked, setTaskChecked] = useState('')\n\n    // check if day in calendar is selected\n    function isSelected(day, value) {\n        return value.isSame(day, 'day');\n    }\n\n    // add classname if selected\n    function showInputTask(day, value) {\n        if(isSelected(day, value)) return 'selected'\n        return ''\n    }\n\n    // handle change\n    const handleChange = (e) => {\n        e.preventDefault();\n\n        setTaskName(e.target.value);\n        setTaskDate(e.target.id);\n        setTaskShortDate(e.target.name);\n        setTaskChecked(false);\n    }\n\n    // handle submit\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        addTask(taskName, taskDate, taskShortDate, taskChecked);\n        setTaskName('');\n        setTaskDate('');\n        setTaskShortDate('');\n        setTaskChecked('');\n    }\n\n    return(\n        <>\n            <Form className={`${showInputTask(day, value)} input-task`} onSubmit={e => handleSubmit(e)}>\n                <Form.Control\n                    required\n                    className='calendar-input'\n                    type='text' \n                    placeholder='Lägg till uppgift..' \n                    id={`${day.format('YYYY/MM/DD')}`}\n                    name={`${day.format('DD MMM')}`}\n                    value={taskName}\n                    onChange={e => handleChange(e)} />\n                <Button \n                    type='submit'\n                    hidden>\n                    +\n                </Button>\n            </Form>\n        </>\n    )\n}\n\nexport default AddTask;","// import libaries\nimport React from 'react';\nimport firebase from '../../../Firebase';\n\n//import components\nimport { IoTrashOutline, IoCheckmarkOutline } from 'react-icons/io5';\n\n\nfunction ReturnTask ({taskChecked, taskID, taskShortDate, taskName, userID}){\n\n    // toggle checked task  \n    const toggleCheck = (e, whichTask, taskChecked) => {\n        e.preventDefault();\n\n        const ref = firebase\n        .database()\n        .ref(`/app/calendar/${userID}/${whichTask}/taskChecked`);\n\n        if(taskChecked === false){\n            ref.set(!taskChecked);\n        } else if(taskChecked === true){\n            ref.set(!taskChecked);\n        }\n    }\n\n\n    // delete task \n    const deleteTask = (e, whichTask) => {\n        e.preventDefault();\n\n        const ref  = firebase.database().ref(`app/calendar/${userID}/${whichTask}`);\n        ref.remove();\n    }\n\n    return(\n        <div className={taskChecked ? 'sidenav-task checked' : 'sidenav-task'} key={taskID}>\n            <div className={taskChecked ? 'capitalize-first task-name inline-block checked' : 'capitalize-first task-name inline-block'}>{taskName}</div>\n            <IoCheckmarkOutline \n                onClick={e => toggleCheck(e, taskID, taskChecked)} \n                className={taskChecked ? 'task-icon checked check' : 'task-icon check'}\n                /> \n            <IoTrashOutline \n                onClick={e => deleteTask(e, taskID)} \n                className='task-icon trash'\n                />\n            <div className='task-date'>{taskShortDate}</div>\n        </div>\n    )\n}\n\n\nexport default ReturnTask;","// import libaries\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport 'moment/locale/sv'\n\n// import components\nimport Container from 'react-bootstrap/Container';\nimport BuildCalendar from '../calendarControllers/BuildCalendar';\nimport dayStyles from '../calendarControllers/DayStyles';\nimport CalendarHeader from './CalendarHeader';\nimport AddTask from '../calendarControllers/AddTask';\nimport ReturnTask from '../calendarControllers/ReturnTask';\n\nfunction Calendar({ addTask, tasks, userID }){\n\n    moment.locale('sv');\n    const weekdays = ['Mån', 'Tis', 'Ons', 'Tors', 'Fre', 'Lör', 'Sön'];\n\n\n    // states\n    const [calendar, setCalendar] = useState([]);\n    const [value, setValue] = useState(moment());\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true)\n    const [query, setQuery] = useState('')\n    const [error, setError] = useState(null)\n\n    const handleClick = (day) => {\n        setValue(day)\n    }\n\n\n   useEffect(() => {\n\n    setCalendar(BuildCalendar(value));\n\n            return (\n            fetch(`http://sholiday.faboul.se/dagar/v2.1/${value.format('YYYY')}`)\n           .then(response => {\n               if(response.ok) {\n                   return response.json()\n               }\n               throw response;\n            })\n            .then(data => {\n                setLoading(false);\n                setData(data.dagar);\n            })\n            .catch(error => {\n                console.error('error', error);\n                setError(error)\n            })\n            )\n   }, [value, query])\n\n   console.log(data);\n\n\n    return(\n            <Container fluid className='calendar-container'>\n                <CalendarHeader\n                  value={value}\n                  setValue={setValue}\n                   /> \n                <Container fluid>\n                <div className='row calendar-weekday border-right-thin border-left-thin border-bottom-thin border-top-thin'>\n                    {weekdays.map((weekday, i) => (\n                        <div key={i} className='col-sm weekday-day fw-bold'>{weekday}</div>\n\n                    ))}\n                </div>\n                    {calendar.map((week, i) => (\n                        <div key={i} className='row calendar-week border-left-bold border-bottom-bold'>\n                            {week.map((day) => {\n\n                                return ( \n                                <div\n                                  key={`${day.format('YYYY/MM/DD')}`} \n                                  id={`${day.format('YYYY/MM/DD')}`} \n                                  className={`${dayStyles(day, value)} day col-sm calendar-day border-right-bold`}\n                                  onClick={(e) => handleClick(day)}\n                                  > \n                                    <div className='date fw-bold'>\n                                        {day.format('D').toString()}\n                                    </div>\n\n                                    {data.map((thisDay) => {\n                                        if(moment(thisDay.datum).isSame(day)){\n                                            return(\n                                                <>\n                                                <div key={day} className={`date holiday ${thisDay['röd dag']}`}>{thisDay.helgdag}</div>\n                                                </>\n                                            )\n                                        }\n\n                                    })}\n                                    \n                                    <div className='calendar-tasks'>\n                                    {tasks && (\n                                     tasks.map((task) => {\n                                         if(moment(task.taskDate).isSame(day)){\n                                             return (\n                                             <ReturnTask \n                                                key={task.taskID}\n                                                userID={userID}\n                                                taskChecked={task.taskChecked}\n                                                taskName={task.taskName}\n                                                taskID={task.taskID}\n                                                taskShortDate={task.taskShortDate}\n                                                />\n                                            )} else return null;\n                                        }) \n                                        )}\n                                    </div>\n                                    <AddTask\n                                      day={day}\n                                      value={value}\n                                      addTask={addTask}/>\n                                </div>\n                            )}\n                            )}\n                        </div>\n                ))} \n                </Container>\n            </Container>\n    )\n\n}\n\n\nexport default Calendar;","import React, { Component } from 'react';\n\nclass FormError extends Component {\n    render(){\n\n        const {theMessage} = this.props;\n\n        return(\n            <div className=\"col-12 alert alert-warning error-message\">\n                {theMessage}\n            </div> \n        );\n    }\n}\n\nexport default FormError;","// import libaries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaFacebookF } from 'react-icons/fa';\nimport { VscSignIn } from 'react-icons/vsc';\n\n// import components\nimport Container from 'react-bootstrap/Container';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport FormError from '../userControllers/FormError';\n\nfunction LoginView({handleSubmit, errorMessage, email, setEmail, password, setPassword}){\n\n    return(\n        <Container>\n            <form onSubmit={e => handleSubmit(e)}>\n                <FormGroup>\n                <div className='form-box'>\n                        <Link \n                          className='form-box-content is-active'\n                          to='/react-calendar/users/login'>\n                            <div className='fw-bold'>\n                               <AiOutlineUser className='form-icon' />\n                               <br /> \n                               Logga in\n                             </div>\n                        </Link>\n                        <div className='form-box-content transparent'></div>\n                        <Link \n                          className='form-box-content'\n                          to='/react-calendar/users/signup'>\n                            <div className='fw-bold'>\n                               <VscSignIn className='form-icon' />\n                               <br /> \n                               Skapa konto\n                             </div>\n                        </Link>\n                    </div>\n                    <FormControl\n                        required\n                        type='text'\n                        id='email'\n                        placeholder='E-post'\n                        name='email'\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        />\n                    <FormControl\n                        required\n                        type='text'\n                        id='password'\n                        placeholder='Lösenord'\n                        name='password'\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        />\n                        {errorMessage !== null ? (\n                                <FormError theMessage={errorMessage}/> \n                            ) : null}\n                    <Button type='submit' className='fw-bold'>Logga in</Button>\n                    <p className='form-or'> \n                        <span>eller</span>\n                    </p>\n                    <Button className='fw-bold facebook'>\n                        <FaFacebookF className='btn-icon' /> \n                        {' '}\n                        Logga in med Facebook\n                    </Button>\n                    <Button className='fw-bold google'>\n                        <FcGoogle className='btn-cion' /> \n                        {' '}\n                        Logga in med Google\n                    </Button>\n                </FormGroup>\n                <p>Har du inget konto än?<Link to='/react-calendar/users/signup' className='text-color'> Skapa konto</Link></p>\n            </form>\n        </Container>\n    )\n}\n\nexport default LoginView;","//import libaries\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom'; \n\n//import components\nimport LoginView from '../userViews/LoginView';\nimport firebase from '../../../Firebase';\n\n\nfunction Login(){\n\n    const history = useHistory();\n\n    // states\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let registrationInfo = {\n            email: email,\n            password: password\n        };\n\n        firebase\n        .auth()\n        .signInWithEmailAndPassword(\n            registrationInfo.email,\n            registrationInfo.password\n        ).then(() => {\n            history.push('/react-calendar/app/calendar');\n        })\n        .catch(error => {\n            if(error.message === \"There is no user record corresponding to this identifier. The user may have been deleted.\") {\n                setErrorMessage(\"Det finns ingen användare med den angivna e-postadressen.\");\n            } else if(error.message === \"The password is invalid or the user does not have a password.\") {\n                setErrorMessage(\"Lösenordet är ogiligt.\")\n            } else {\n                setErrorMessage(null);\n            }\n        })\n    }\n\n    return(\n        <LoginView\n          email={email}\n          setEmail={setEmail}\n          errorMessage={errorMessage}\n          password={password}\n          setPassword={setPassword}\n          handleSubmit={handleSubmit}\n        /> \n    )\n}\n\nexport default Login;","// import libaries\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaFacebookF } from 'react-icons/fa';\nimport { VscSignIn } from 'react-icons/vsc';\n\n// import components\nimport Container from 'react-bootstrap/Container';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport FormError from '../userControllers/FormError';\n\n\nfunction SignupView({handleSubmit, email, errorMessage, setEmail, passOne, setPassOne, passTwo, setPassTwo}){\n\n    return(\n        <Container>\n            <form onSubmit={e => handleSubmit(e)}>\n                <FormGroup>\n                <div className='form-box'>\n                        <Link \n                          className='form-box-content'\n                          to='/react-calendar/users/login'>\n                            <div className='fw-bold'>\n                               <AiOutlineUser className='form-icon' />\n                               <br /> \n                               Logga in\n                             </div>\n                        </Link>\n                        <div className='form-box-content transparent'></div>\n                        <Link \n                          className='form-box-content is-active'\n                          to='/react-calendar/users/signup'>\n                            <div className='fw-bold'>\n                               <VscSignIn className='form-icon' />\n                               <br /> \n                               Skapa konto\n                             </div>\n                        </Link>\n                    </div>\n                    <Button className='fw-bold facebook'>\n                        <FaFacebookF className='btn-icon' /> \n                        {' '}\n                        Fortsätt med Facebook\n                    </Button>\n                    <Button className='fw-bold google'>\n                        <FcGoogle className='btn-cion' /> \n                        {' '}\n                        Fortsätt med Google\n                    </Button>\n                    <p className='form-or'> \n                        <span>eller</span>\n                    </p>\n                    <FormControl\n                        required\n                        type='text'\n                        id='email'\n                        placeholder='E-post'\n                        name='email'\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        />\n                    <FormControl\n                        required\n                        type='text'\n                        id='passOne'\n                        placeholder='Lösenord'\n                        name='passOne'\n                        value={passOne}\n                        onChange={e => setPassOne(e.target.value)}\n                        />\n                    <FormControl\n                        required\n                        type='text'\n                        id='passTwo'\n                        placeholder='Upprepa lösenord'\n                        name='passTwo'\n                        value={passTwo}\n                        onChange={e => setPassTwo(e.target.value)}\n                        />\n                        {errorMessage !== null ? (\n                                <FormError theMessage={errorMessage}/> \n                            ) : null}\n                    <Button type='submit' className='fw-bold'>Registrera</Button>\n                </FormGroup>\n                <p>Har du redan ett konto?<Link to='/react-calendar/users/login' className='text-color'> Logga in</Link></p>\n            </form>\n        </Container>\n    )\n}\n\nexport default SignupView;","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom'; \n\n//import components\nimport SignupView from '../userViews/SignupView'\nimport firebase from '../../../Firebase';\n\nfunction Signup({registerUser}){\n\n    let history = useHistory();\n\n    // states\n    const [email, setEmail] = useState('');\n    const [passOne, setPassOne] = useState('');\n    const [passTwo, setPassTwo] = useState('');\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    useEffect(() => {\n\n        // check password requirements\n        if(!passOne){\n            setErrorMessage(null);\n        } else if (passOne.length < 6){\n            setErrorMessage('Lösenordet bör innehålla minst 6 tecken.');\n        } else if(!passTwo) {\n            setErrorMessage(null);\n        } else if(passOne !== passTwo) {\n            setErrorMessage('Lösenorden matchar inte.');\n        } else {\n            setErrorMessage(null);\n        }\n\n    },[passOne, passTwo])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        let registrationInfo = {\n            email: email,\n            password: passOne\n        }\n\n        firebase\n        .auth()\n        .createUserWithEmailAndPassword(\n            registrationInfo.email,\n            registrationInfo.password\n        ).then(() => {\n            console.log('användare registrerad')\n            registerUser(history);\n        })\n        .catch(error => {\n            if(error.message === 'The email address is already in use by another account.'){\n                console.log(error.message)\n                setErrorMessage('E-postadressen används redan av en annan användare.');\n            } else {\n                setErrorMessage(null);\n            }\n        })\n    }\n\n\n    return(\n        <SignupView\n        email={email}\n        errorMessage={errorMessage}\n        setEmail={setEmail}\n        passOne={passOne}\n        setPassOne={setPassOne}\n        passTwo={passTwo}\n        setPassTwo={setPassTwo}\n        handleSubmit={handleSubmit} /> \n    )\n}\n\nexport default Signup;","function toggleDropDown (e, tasks, setDropDown, dropDown){\n\n        if(tasks !== undefined){\n            e.preventDefault();\n            setDropDown(!dropDown);\n\n       return; \n    };\n};\n\nexport default toggleDropDown; ","// import libaries\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport 'moment/locale/sv'\n\n\n// import components\nimport { IoHomeOutline, IoMailOpenOutline } from 'react-icons/io5';\nimport { IoIosArrowForward, IoIosNotificationsOutline } from 'react-icons/io';\nimport ReturnTask from '../../calendar/calendarControllers/ReturnTask';\nimport { Navbar, Container } from 'react-bootstrap';\nimport toggleDropDown from '../navControllers/ToggleDropDown';\nimport NavbarBrand from './NavbarBrand';\n\nfunction Sidenav({ sidenav, tasks, userID, user }){\n\n    const [dropDown, setDropDown] = useState(true);\n    \n    moment.locale('sv');\n    let todaysDate = moment().format('YYYYMMDD');\n    let todaysDateDayAndMonth = moment().format('DD MMM');\n\n\n    let today;\n    let beforeToday;\n    let afterToday;\n\n    if(tasks !== undefined){\n\n        // sort tasks after date\n    let sortedTasks = tasks.sort((a,b) => new moment(a.taskDate).format('YYYYMMDD') - new moment(b.taskDate).format('YYYYMMDD'));\n\n        // get tasks with deadline before todays date\n        beforeToday = sortedTasks.map((task, i) => {\n            if(moment(task.taskDate).isBefore(todaysDate)){\n                return (\n                    <ReturnTask\n                        key={i} \n                        userID={userID}\n                        taskChecked={task.taskChecked}\n                        taskName={task.taskName}\n                        taskID={task.taskID}\n                        taskShortDate={task.taskShortDate}\n                        />\n                )\n            } else return null;\n        }); \n    \n        // get tasks with deadline on todays date\n        today = sortedTasks.map((task, i) => {\n            if(moment(task.taskDate).isSame(todaysDate)){\n                return (\n                    <ReturnTask\n                        key={i} \n                        userID={userID}\n                        taskChecked={task.taskChecked}\n                        taskName={task.taskName}\n                        taskID={task.taskID}\n                        taskShortDate={task.taskShortDate}\n                        />\n                )\n            } else return null; \n        }); \n    \n        // get tasks with deadline after today date\n        afterToday = sortedTasks.map((task, i) => {\n            if(moment(task.taskDate).isAfter(todaysDate)){\n                return (\n                    <ReturnTask\n                        key={i}  \n                        userID={userID}\n                        taskChecked={task.taskChecked}\n                        taskName={task.taskName}\n                        taskID={task.taskID}\n                        taskShortDate={task.taskShortDate}\n                        />\n                )\n            } else return null; \n        });\n    };\n\n    return (\n\n            <div className={sidenav ? 'sidenav' : 'sidenav is-active'}>\n                <Navbar>\n                    <Container fluid>\n                        <NavbarBrand \n                            user={user}/> \n                    </Container>\n                </Navbar>\n                <ul className='sidenav-alternatives'>\n                    <p className='fw-bold'><IoHomeOutline className='sidenav-icon' /> Hem</p>\n                    <p className='fw-bold'><IoMailOpenOutline className='sidenav-icon' /> Inkorg</p>\n                </ul>\n                <div className='dropdown'>\n                    <div className='fw-bold dropdown-category'>\n                        <div className='nav-link-dropdown' onClick={e => toggleDropDown(e, tasks, setDropDown, dropDown)}>\n                            <IoIosNotificationsOutline className='sidenav-icon' />\n                            <p className='inline-block'>Mina uppgifter</p>\n                            <IoIosArrowForward className={dropDown ? 'sidenav-icon arrow inline-block rotate' : 'arrow inline-block' }/></div>\n                    </div>\n                    <ul className={dropDown ? 'dropdown-content hide' : 'dropdown-content'}>\n                        <div className=\"list-group list-group-flush\">\n                            <div className='sidenav-category previous'>\n                                <div className='sidenav-title border-bottom-dark fw-bold'>\n                                Förfallna\n                                </div>\n                                <div className='sidenav-tasks'>{beforeToday}</div>\n                            </div>\n                            <div className='sidenav-category'>\n                                <div className='sidenav-title border-bottom-dark fw-bold today'>\n                                {todaysDateDayAndMonth}{' '}•{' '}Idag\n                                </div>\n                                <div className='sidenav-tasks'>{today}</div>\n                            </div>\n                            <div className='sidenav-category'>\n                                <div className='sidenav-title border-bottom-dark fw-bold'>\n                                Kommande\n                                </div>\n                                <div className='sidenav-tasks'>{afterToday}</div>\n                            </div>\n                        </div>\n                    </ul>\n                </div>\n            </div>\n    )\n}\n\nexport default Sidenav;","// import libaries \nimport React, { Component } from 'react';\nimport { \n  BrowserRouter as Router, \n  Switch,\n  Route\n } from 'react-router-dom';\nimport firebase from './Firebase';\nimport moment from 'moment';\nimport 'moment/locale/sv'\n\n// import components\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Navigation from './components/navigation/Navigation';\nimport StartPage from './components/StartPage';\nimport Calendar from './components/calendar/calendarViews/Calendar';\nimport Login from './components/user/userControllers/Login';\nimport Signup from './components/user/userControllers/Signup';\nimport Sidenav from './components/navigation/navViews/Sidenav';\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      userID: null, \n      sidenav: true, \n      loading: true\n    };\n  };\n\n\n  componentDidMount() {\n\n    demoAsyncCall().then(() => this.setState({ loading: false }));\n    \n    firebase\n    .auth()\n    .onAuthStateChanged(FirebaseUser => {\n      if(FirebaseUser){\n        this.setState({\n          user: FirebaseUser,\n          userID: FirebaseUser.uid\n        });\n\n        const tasksRef = firebase\n          .database()\n          .ref('/app/calendar/' + FirebaseUser.uid);\n\n        tasksRef.on('value', snapshot => {\n\n          let tasks = snapshot.val();\n          let tasksList = [];\n          let noneCheckedTasks = [];\n\n          for (let item in tasks) {\n            tasksList.push({\n              taskID: item,\n              taskName: tasks[item].taskName,\n              taskDate: tasks[item].taskDate,\n              taskShortDate: tasks[item].taskShortDate,\n              taskChecked: tasks[item].taskChecked\n            });\n\n            // check if task is checked or not, if not checked -> push to array\n            if(tasks[item].taskChecked === false) {\n              noneCheckedTasks.push({\n                taskChecked: tasks[item].taskChecked\n              })\n            }\n          }\n\n          this.setState({\n            tasks: tasksList,\n            howManyTasks: noneCheckedTasks.length\n          });\n        })  \n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  // show or hide sidenav \n  showSidenav = () => {\n    this.setState({\n      sidenav : !this.state.sidenav\n    })\n  };\n\n\n  // add task \n  addTask = (taskName, taskDate, taskShortDate, taskChecked) => {\n    const ref = firebase\n        .database()\n        .ref(`/app/calendar/${this.state.user.uid}`);\n    ref.push({\n      taskName:taskName, \n      taskDate:taskDate, \n      taskShortDate:taskShortDate,\n      taskChecked:taskChecked\n    })\n  };\n\n\n\n  // register user\n  registerUser = (history) => {\n      firebase\n      .auth()\n      .onAuthStateChanged(FirebaseUser => {\n        this.setState({\n          user: FirebaseUser,\n          userID: FirebaseUser.uid\n        });\n      history.push('/react-calendar/app/calendar');\n    })\n  };\n\n\n  // log out \n  logOutUser = (e, history) => {\n      e.preventDefault();\n      this.setState({\n        user: null,\n        userID: null\n      });\n\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          console.log('utloggad');\n          console.log(this.state.user);\n          history.push('/react-calendar');\n      })\n  };\n\n  render() {\n\n    const { loading } = this.state;\n\n    if(loading) {\n      return null;\n    }\n\n  return (\n    <div className='App'>\n        <Router>\n            <Container fluid>\n                <Row>\n                    {this.state.user && (<Col xs={this.state.sidenav? '3' : '0'} className={this.state.sidenav ? 'sidenav-wrap is-active border-right' : 'sidenav-wrap not-active'}>\n                        <Sidenav \n                          user={this.state.user}\n                          tasks={this.state.tasks}\n                          userID={this.state.userID}\n                          todaysDate={this.state.todaysDate}\n                          todaysDateDayAndMonth={this.state.todaysDateDayAndMonth}\n                          toggleDropDown={this.toggleDropDown}\n                          /> \n                    </Col>\n                    )}\n                    <Col>\n                    <Navigation\n                        path='/react-calendar/:app?/:app2?'\n                        user={this.state.user}\n                        logOutUser={this.logOutUser}\n                        sidenav={this.state.sidenav}\n                        showSidenav={this.showSidenav}\n                        howManyTasks={this.state.howManyTasks}/> \n                    <Switch>\n                      <Route \n                          exact path='/react-calendar'>\n                          <StartPage\n                              user={this.state.user}/> \n                      </Route>\n                      <Route\n                          path='/react-calendar/app/calendar'>\n                          <Calendar \n                              addTask={this.addTask}\n                              tasks={this.state.tasks}\n                              userID={this.state.userID}/> \n                      </Route>\n                      <Route \n                          path='/react-calendar/users/login'>\n                          <Login /> \n                      </Route> \n                      <Route \n                          path='/react-calendar/users/signup'>\n                          <Signup \n                              registerUser={this.registerUser}/> \n                      </Route> \n                    </Switch>\n                    </Col>\n                </Row>\n            </Container>\n         </Router>\n    </div>\n  );\n}\n}\n\n\nfunction demoAsyncCall() {\n  return new Promise((resolve) => setTimeout(() => resolve(), 2500));\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// import stylesheets\nimport './stylesheets/index.css';\nimport './stylesheets/navigation.css';\nimport './stylesheets/calendar.css';\nimport './stylesheets/form.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}